{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting started With Coiote IoT Device Management platform, you can integrate your LwM2M devices with the Microsoft Azure IoT Hub and Azure IoT Central. This guide will take you on a step-by-step journey through the integration process to make it seamless and efficient. Here\u2019s how you can get started with the Coiote DM \u2013 Azure IoT integration: Getting started {: .md-button .md-button--small }","title":"Getting started"},{"location":"#getting-started","text":"With Coiote IoT Device Management platform, you can integrate your LwM2M devices with the Microsoft Azure IoT Hub and Azure IoT Central. This guide will take you on a step-by-step journey through the integration process to make it seamless and efficient. Here\u2019s how you can get started with the Coiote DM \u2013 Azure IoT integration: Getting started {: .md-button .md-button--small }","title":"Getting started"},{"location":"Configuring_Azure_IoT_integration_extension/","text":"Configuring the Azure IoT integration extension === \"Azure IoT Hub\" ## Configure the Azure IoT Hub extension ### Prerequisites: - An active IoT Hub with hub owner access permissions. - A Coiote DM user account with permissions to use the integration extension. __________________ ### Get the IoT Hub connection string 1. In your IoT Hub general view, go to **Shared access policies**: ![IoT Hub Shared access policies](images/azure_hub_credentials.png \"IoT Hub Shared access policies\") 2. From the list of policies, select the `iothubowner` policy. 3. Under **Shared access keys**, click the copy icon for the *Connection string -- primary key* to save the value. ![IoT Hub Connection string](images/connection_string.png \"IoT Hub Connection string\") !!! info For detailed information about the IoT Hub permissions, please visit the [Control access to IoT Hub](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-security#access-control-and-permissions) section of the Azure IoT Hub documentation. Now you need to use the credential in the Coiote DM platform. ### Set up the **Azure IoT Hub Extension** using credentials. 1. In your Coiote DM user account, go to **Administration --> Extensions**. 2. Find the **Azure IoT Hub** tab and click `Setup`. ![Azure IoT Hub extension](images/azure_extension.png \"Azure IoT Hub extension\") 3. In the tab, paste the previously copied IoT Hub connection string. ![Setting up the extension](images/extension_setup.png \"Setting up the extension\") - use `Test connection` to see if the connection can be established correctly. - click `Save` to keep the setting. === \"Azure IoT Central\" ## Configure the Azure IoT Central extension ### Prerequisites: - An active IoT Central with hub owner access permissions. - A Coiote DM user account with permissions to use the integration extension. _______________ ### Get the Azure IoT Central integration credentials 1. In your Azure IoT Central account view, go to **Administration**: 2. Under **Your application**, copy the full *Application URL* (along with '.azureiotcentral.com') into Notepad or other place to keep it for later. ![IoT Central Administration](images/azure_central_admin.png \"IoT Hub Administration\") 3. From the **Administration** menu, select **API tokens** and click *generate token*. ![Azure IoT central API token generation](images/api_token.png \"Azure IoT central API token generation\") 4. In the pop-up window that appears, click the copy icon for the newly generated token. ![token generated](images/generated_token.png \"Generate token pop-up\") Now you need to use the obtained credentials in the Coiote DM platform. ### Set up the **Azure IoT Hub Extension** using credentials. 1. In your Coiote DM user account, go to **Administration --> Extensions**. 2. Find the **Azure IoT Central** tab and click `Setup`. ![Azure IoT Central extension](images/azure_central_extension.png \"Azure IoT Central extension\") 3. Inside the tab: - paste the previously copied Azure IoT Central *Application URL*, - provide the API token and, - if needed, enter your *Device Provisioning Service hostname* (however, the default address provided is sufficient in most cases). ![Setting up the Azure IoT Central extension](images/central_extension_setup.png \"Setting up IoT Central extension\") - use `Test connection` to see if the connection can be established correctly. - click `Save` to keep the setting.","title":"Configuring the Azure IoT integration extension"},{"location":"Configuring_Azure_IoT_integration_extension/#configuring-the-azure-iot-integration-extension","text":"=== \"Azure IoT Hub\" ## Configure the Azure IoT Hub extension ### Prerequisites: - An active IoT Hub with hub owner access permissions. - A Coiote DM user account with permissions to use the integration extension. __________________ ### Get the IoT Hub connection string 1. In your IoT Hub general view, go to **Shared access policies**: ![IoT Hub Shared access policies](images/azure_hub_credentials.png \"IoT Hub Shared access policies\") 2. From the list of policies, select the `iothubowner` policy. 3. Under **Shared access keys**, click the copy icon for the *Connection string -- primary key* to save the value. ![IoT Hub Connection string](images/connection_string.png \"IoT Hub Connection string\") !!! info For detailed information about the IoT Hub permissions, please visit the [Control access to IoT Hub](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-security#access-control-and-permissions) section of the Azure IoT Hub documentation. Now you need to use the credential in the Coiote DM platform. ### Set up the **Azure IoT Hub Extension** using credentials. 1. In your Coiote DM user account, go to **Administration --> Extensions**. 2. Find the **Azure IoT Hub** tab and click `Setup`. ![Azure IoT Hub extension](images/azure_extension.png \"Azure IoT Hub extension\") 3. In the tab, paste the previously copied IoT Hub connection string. ![Setting up the extension](images/extension_setup.png \"Setting up the extension\") - use `Test connection` to see if the connection can be established correctly. - click `Save` to keep the setting. === \"Azure IoT Central\" ## Configure the Azure IoT Central extension ### Prerequisites: - An active IoT Central with hub owner access permissions. - A Coiote DM user account with permissions to use the integration extension. _______________ ### Get the Azure IoT Central integration credentials 1. In your Azure IoT Central account view, go to **Administration**: 2. Under **Your application**, copy the full *Application URL* (along with '.azureiotcentral.com') into Notepad or other place to keep it for later. ![IoT Central Administration](images/azure_central_admin.png \"IoT Hub Administration\") 3. From the **Administration** menu, select **API tokens** and click *generate token*. ![Azure IoT central API token generation](images/api_token.png \"Azure IoT central API token generation\") 4. In the pop-up window that appears, click the copy icon for the newly generated token. ![token generated](images/generated_token.png \"Generate token pop-up\") Now you need to use the obtained credentials in the Coiote DM platform. ### Set up the **Azure IoT Hub Extension** using credentials. 1. In your Coiote DM user account, go to **Administration --> Extensions**. 2. Find the **Azure IoT Central** tab and click `Setup`. ![Azure IoT Central extension](images/azure_central_extension.png \"Azure IoT Central extension\") 3. Inside the tab: - paste the previously copied Azure IoT Central *Application URL*, - provide the API token and, - if needed, enter your *Device Provisioning Service hostname* (however, the default address provided is sufficient in most cases). ![Setting up the Azure IoT Central extension](images/central_extension_setup.png \"Setting up IoT Central extension\") - use `Test connection` to see if the connection can be established correctly. - click `Save` to keep the setting.","title":"Configuring the Azure IoT integration extension"},{"location":"example/","text":"Welcome to MkDocs 4 For full documentation visit mkdocs.org . !!! note Trolololololo notatka Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Screen 1 {: loading=lazy } Screen 2 {: loading=lazy } Screen 3 {: loading=lazy } Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] === \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` # COPY Welcome to MkDocs 4 For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] === \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` # COPY Welcome to MkDocs 4 For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] === \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` Subscribe to our mailing list {: .md-button .md-button--small } Subscribe to our mailing list {: .md-button } Subscribe to our mailing list {: .md-button .md-button--big } Subscribe to our mailing list {: .md-button .md-button--small .md-button--primary } Subscribe to our mailing list {: .md-button .md-button--primary } Subscribe to our mailing list {: .md-button .md-button--big .md-button--primary }","title":"Example page"},{"location":"example/#welcome-to-mkdocs-4","text":"For full documentation visit mkdocs.org . !!! note Trolololololo notatka","title":"Welcome to MkDocs 4"},{"location":"example/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"example/#screen-1","text":"{: loading=lazy }","title":"Screen 1"},{"location":"example/#screen-2","text":"{: loading=lazy }","title":"Screen 2"},{"location":"example/#screen-3","text":"{: loading=lazy }","title":"Screen 3"},{"location":"example/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] === \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` # COPY Welcome to MkDocs 4 For full documentation visit mkdocs.org .","title":"Project layout"},{"location":"example/#commands_1","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"example/#project-layout_1","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] === \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` # COPY Welcome to MkDocs 4 For full documentation visit mkdocs.org .","title":"Project layout"},{"location":"example/#commands_2","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"example/#project-layout_2","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] === \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` Subscribe to our mailing list {: .md-button .md-button--small } Subscribe to our mailing list {: .md-button } Subscribe to our mailing list {: .md-button .md-button--big } Subscribe to our mailing list {: .md-button .md-button--small .md-button--primary } Subscribe to our mailing list {: .md-button .md-button--primary } Subscribe to our mailing list {: .md-button .md-button--big .md-button--primary }","title":"Project layout"},{"location":"support/","text":"Support","title":"Support"},{"location":"support/#support","text":"","title":"Support"}]}