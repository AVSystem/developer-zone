{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting started With Coiote IoT Device Management platform, you can integrate your LwM2M devices with the Microsoft Azure IoT Hub and Azure IoT Central. This guide will take you on a step-by-step journey through the integration process to make it seamless and efficient. Here\u2019s how you can get started with the Coiote DM \u2013 Azure IoT integration: Configure integration with Azure IoT Central Configure integration with Azure IoT Hub","title":"Getting Started"},{"location":"#getting-started","text":"With Coiote IoT Device Management platform, you can integrate your LwM2M devices with the Microsoft Azure IoT Hub and Azure IoT Central. This guide will take you on a step-by-step journey through the integration process to make it seamless and efficient. Here\u2019s how you can get started with the Coiote DM \u2013 Azure IoT integration: Configure integration with Azure IoT Central Configure integration with Azure IoT Hub","title":"Getting started"},{"location":"Configuring_Azure_IoT_integration_extension/","text":"Configuring the Azure IoT integration extension Azure IoT Hub Configure the Azure IoT Hub extension Prerequisites: An active IoT Hub with hub owner access permissions. A Coiote DM user account with permissions to use the integration extension. Get the IoT Hub connection string In your IoT Hub general view, go to Shared access policies : From the list of policies, select the iothubowner policy. Under Shared access keys , click the copy icon for the Connection string -- primary key to save the value. Info For detailed information about the IoT Hub permissions, please visit the Control access to IoT Hub section of the Azure IoT Hub documentation. Now you need to use the credential in the Coiote DM platform. Set up the Azure IoT Hub Extension using credentials. In your Coiote DM user account, go to Administration --> Extensions . Find the Azure IoT Hub tab and click Setup . In the tab, paste the previously copied IoT Hub connection string. use Test connection to see if the connection can be established correctly. click Save to keep the setting. Azure IoT Central Configure the Azure IoT Central extension Prerequisites: An active IoT Central with hub owner access permissions. A Coiote DM user account with permissions to use the integration extension. Get the Azure IoT Central integration credentials In your Azure IoT Central account view, go to Administration : Under Your application , copy the full Application URL (along with '.azureiotcentral.com') into Notepad or other place to keep it for later. From the Administration menu, select API tokens and click generate token . In the pop-up window that appears, click the copy icon for the newly generated token. Now you need to use the obtained credentials in the Coiote DM platform. Set up the Azure IoT Hub Extension using credentials. In your Coiote DM user account, go to Administration --> Extensions . Find the Azure IoT Central tab and click Setup . Inside the tab: paste the previously copied Azure IoT Central Application URL , provide the API token and, if needed, enter your Device Provisioning Service hostname (however, the default address provided is sufficient in most cases). use Test connection to see if the connection can be established correctly. click Save to keep the setting. <<<<<<< HEAD dc90ace7677b11e30d972fc8f39724db107f0ecc","title":"Configuring Azure IoT integration extension"},{"location":"Configuring_Azure_IoT_integration_extension/#configuring-the-azure-iot-integration-extension","text":"Azure IoT Hub","title":"Configuring the Azure IoT integration extension"},{"location":"Configuring_Azure_IoT_integration_extension/#configure-the-azure-iot-hub-extension","text":"","title":"Configure the Azure IoT Hub extension"},{"location":"Configuring_Azure_IoT_integration_extension/#prerequisites","text":"An active IoT Hub with hub owner access permissions. A Coiote DM user account with permissions to use the integration extension.","title":"Prerequisites:"},{"location":"Configuring_Azure_IoT_integration_extension/#get-the-iot-hub-connection-string","text":"In your IoT Hub general view, go to Shared access policies : From the list of policies, select the iothubowner policy. Under Shared access keys , click the copy icon for the Connection string -- primary key to save the value. Info For detailed information about the IoT Hub permissions, please visit the Control access to IoT Hub section of the Azure IoT Hub documentation. Now you need to use the credential in the Coiote DM platform.","title":"Get the IoT Hub connection string"},{"location":"Configuring_Azure_IoT_integration_extension/#set-up-the-azure-iot-hub-extension-using-credentials","text":"In your Coiote DM user account, go to Administration --> Extensions . Find the Azure IoT Hub tab and click Setup . In the tab, paste the previously copied IoT Hub connection string. use Test connection to see if the connection can be established correctly. click Save to keep the setting. Azure IoT Central","title":"Set up the Azure IoT Hub Extension using credentials."},{"location":"Configuring_Azure_IoT_integration_extension/#configure-the-azure-iot-central-extension","text":"","title":"Configure the Azure IoT Central extension"},{"location":"Configuring_Azure_IoT_integration_extension/#prerequisites_1","text":"An active IoT Central with hub owner access permissions. A Coiote DM user account with permissions to use the integration extension.","title":"Prerequisites:"},{"location":"Configuring_Azure_IoT_integration_extension/#get-the-azure-iot-central-integration-credentials","text":"In your Azure IoT Central account view, go to Administration : Under Your application , copy the full Application URL (along with '.azureiotcentral.com') into Notepad or other place to keep it for later. From the Administration menu, select API tokens and click generate token . In the pop-up window that appears, click the copy icon for the newly generated token. Now you need to use the obtained credentials in the Coiote DM platform.","title":"Get the Azure IoT Central integration credentials"},{"location":"Configuring_Azure_IoT_integration_extension/#set-up-the-azure-iot-hub-extension-using-credentials_1","text":"In your Coiote DM user account, go to Administration --> Extensions . Find the Azure IoT Central tab and click Setup . Inside the tab: paste the previously copied Azure IoT Central Application URL , provide the API token and, if needed, enter your Device Provisioning Service hostname (however, the default address provided is sufficient in most cases). use Test connection to see if the connection can be established correctly. click Save to keep the setting.","title":"Set up the Azure IoT Hub Extension using credentials."},{"location":"Configuring_Azure_IoT_integration_extension/#head","text":"dc90ace7677b11e30d972fc8f39724db107f0ecc","title":"&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD"},{"location":"example/","text":"Welcome to MkDocs 4 For full documentation visit mkdocs.org . Note Trolololololo notatka Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Screen 1 Screen 2 Screen 3 Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } COPY Welcome to MkDocs 4 For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } COPY Welcome to MkDocs 4 For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Subscribe to our mailing list Subscribe to our mailing list Subscribe to our mailing list Subscribe to our mailing list Subscribe to our mailing list Subscribe to our mailing list","title":"Example page"},{"location":"example/#welcome-to-mkdocs-4","text":"For full documentation visit mkdocs.org . Note Trolololololo notatka","title":"Welcome to MkDocs 4"},{"location":"example/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"example/#screen-1","text":"","title":"Screen 1"},{"location":"example/#screen-2","text":"","title":"Screen 2"},{"location":"example/#screen-3","text":"","title":"Screen 3"},{"location":"example/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"Project layout"},{"location":"example/#copy-welcome-to-mkdocs-4","text":"For full documentation visit mkdocs.org .","title":"COPY Welcome to MkDocs 4"},{"location":"example/#commands_1","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"example/#project-layout_1","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"Project layout"},{"location":"example/#copy-welcome-to-mkdocs-4_1","text":"For full documentation visit mkdocs.org .","title":"COPY Welcome to MkDocs 4"},{"location":"example/#commands_2","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"example/#project-layout_2","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Subscribe to our mailing list Subscribe to our mailing list Subscribe to our mailing list Subscribe to our mailing list Subscribe to our mailing list Subscribe to our mailing list","title":"Project layout"},{"location":"Azure_IoT_Central_integration/Configuring_Azure_IoT_Central_integration_extension/","text":"Configuring integration extension To enable communication and data flow between the Azure IoT Central and Coiote DM platforms, you first need to integrate them using the dedicated extension module in Coiote DM. Follow the instruction below to learn how to do it. Prerequisites: An active IoT Central with hub owner access permissions. A Coiote DM user account with permissions to use the integration extension. Get the Azure IoT Central integration credentials In your Azure IoT Central account view, go to Administration : Under Your application , copy the full Application URL (along with '.azureiotcentral.com') into Notepad or other place to keep it for later. From the Administration menu, select API tokens and click generate token . In the pop-up window that appears, click the copy icon for the newly generated token. Now you need to use the obtained credentials in the Coiote DM platform. Set up the Azure IoT Hub Extension using credentials. In your Coiote DM user account, go to Administration --> Extensions . Find the Azure IoT Central tab and click Setup . Inside the tab: paste the previously copied Azure IoT Central Application URL , provide the API token and, if needed, enter your Device Provisioning Service hostname (however, the default address provided is sufficient in most cases). use Test connection to see if the connection can be established correctly. click Save to keep the setting. Next steps Syncing devices with Coiote DM Importing devices to Azure IoT Central","title":"Configuring integration extension"},{"location":"Azure_IoT_Central_integration/Configuring_Azure_IoT_Central_integration_extension/#configuring-integration-extension","text":"To enable communication and data flow between the Azure IoT Central and Coiote DM platforms, you first need to integrate them using the dedicated extension module in Coiote DM. Follow the instruction below to learn how to do it.","title":"Configuring integration extension"},{"location":"Azure_IoT_Central_integration/Configuring_Azure_IoT_Central_integration_extension/#prerequisites","text":"An active IoT Central with hub owner access permissions. A Coiote DM user account with permissions to use the integration extension.","title":"Prerequisites:"},{"location":"Azure_IoT_Central_integration/Configuring_Azure_IoT_Central_integration_extension/#get-the-azure-iot-central-integration-credentials","text":"In your Azure IoT Central account view, go to Administration : Under Your application , copy the full Application URL (along with '.azureiotcentral.com') into Notepad or other place to keep it for later. From the Administration menu, select API tokens and click generate token . In the pop-up window that appears, click the copy icon for the newly generated token. Now you need to use the obtained credentials in the Coiote DM platform.","title":"Get the Azure IoT Central integration credentials"},{"location":"Azure_IoT_Central_integration/Configuring_Azure_IoT_Central_integration_extension/#set-up-the-azure-iot-hub-extension-using-credentials","text":"In your Coiote DM user account, go to Administration --> Extensions . Find the Azure IoT Central tab and click Setup . Inside the tab: paste the previously copied Azure IoT Central Application URL , provide the API token and, if needed, enter your Device Provisioning Service hostname (however, the default address provided is sufficient in most cases). use Test connection to see if the connection can be established correctly. click Save to keep the setting.","title":"Set up the Azure IoT Hub Extension using credentials."},{"location":"Azure_IoT_Central_integration/Configuring_Azure_IoT_Central_integration_extension/#next-steps","text":"Syncing devices with Coiote DM Importing devices to Azure IoT Central","title":"Next steps"},{"location":"Azure_IoT_Central_integration/Concepts/Communication_flows/","text":"Communication flows","title":"Communication flows"},{"location":"Azure_IoT_Central_integration/Concepts/Communication_flows/#communication-flows","text":"","title":"Communication flows"},{"location":"Azure_IoT_Central_integration/Device_operations/Importing_devices_to_Azure_IoT_Central/","text":"Importing devices to Azure IoT Central If you have device entities in Coiote DM that you would like to manage via the Azure IoT Hub, you may use the import functionality. Follow the instruction below to learn how to do it. Prerequisites Added at least one device entity in Coiote DM. An active Azure Blob Storage account. Create a group of devices for import First, you need to insert all the devices to be imported into a common group for ease of configuration. In Coiote DM, go to Device inventory , select the devices you would like to import and use the Add to group action. In the pop-up window that appears, select a group Get the Azure Blob storage connection string Azure Blob storage connection string will be important in the last step of the import operation. Here is how to obtain it: In your Azure Blob Storage account, go to Access keys . Click Show keys and copy the connection string to your clipboard. Import your devices Now you are ready to import your devices. In the Device groups panel, select your group of devices ready for import and click Actions . Under Management , select the Import devices to Azure IoT . In the pop-up window, paste the Azure Blob Storage connection string and select/deselect the following options: Add all devices to the Azure IoT Hub group - select it to add your devices to a group dedicated for devices integrated with the Azure IoT Hub. Note that this group has the 'Azure dialect' set as the default. Add the Azure dialect to this group - select it if you want to set the 'Azure dialect' to your current group. This setting is useful in case you deselect the first option. Omit devices already tagged as Azure devices - select this option if you have devices in your current group that have been previously imported to Azure IoT Hub and you do not want to include them in the import action.","title":"Importing devices to Azure IoT Central"},{"location":"Azure_IoT_Central_integration/Device_operations/Importing_devices_to_Azure_IoT_Central/#importing-devices-to-azure-iot-central","text":"If you have device entities in Coiote DM that you would like to manage via the Azure IoT Hub, you may use the import functionality. Follow the instruction below to learn how to do it.","title":"Importing devices to Azure IoT Central"},{"location":"Azure_IoT_Central_integration/Device_operations/Importing_devices_to_Azure_IoT_Central/#prerequisites","text":"Added at least one device entity in Coiote DM. An active Azure Blob Storage account.","title":"Prerequisites"},{"location":"Azure_IoT_Central_integration/Device_operations/Importing_devices_to_Azure_IoT_Central/#create-a-group-of-devices-for-import","text":"First, you need to insert all the devices to be imported into a common group for ease of configuration. In Coiote DM, go to Device inventory , select the devices you would like to import and use the Add to group action. In the pop-up window that appears, select a group","title":"Create a group of devices for import"},{"location":"Azure_IoT_Central_integration/Device_operations/Importing_devices_to_Azure_IoT_Central/#get-the-azure-blob-storage-connection-string","text":"Azure Blob storage connection string will be important in the last step of the import operation. Here is how to obtain it: In your Azure Blob Storage account, go to Access keys . Click Show keys and copy the connection string to your clipboard.","title":"Get the Azure Blob storage connection string"},{"location":"Azure_IoT_Central_integration/Device_operations/Importing_devices_to_Azure_IoT_Central/#import-your-devices","text":"Now you are ready to import your devices. In the Device groups panel, select your group of devices ready for import and click Actions . Under Management , select the Import devices to Azure IoT . In the pop-up window, paste the Azure Blob Storage connection string and select/deselect the following options: Add all devices to the Azure IoT Hub group - select it to add your devices to a group dedicated for devices integrated with the Azure IoT Hub. Note that this group has the 'Azure dialect' set as the default. Add the Azure dialect to this group - select it if you want to set the 'Azure dialect' to your current group. This setting is useful in case you deselect the first option. Omit devices already tagged as Azure devices - select this option if you have devices in your current group that have been previously imported to Azure IoT Hub and you do not want to include them in the import action.","title":"Import your devices"},{"location":"Azure_IoT_Central_integration/Device_operations/Syncing_devices_with_Coiote_DM/","text":"Syncing devices with Coiote DM If you have any device entities in your Azure IoT Central and would like to migrate them to the Coiote DM platform for full management possibilities, follow the instruction below. Prerequisites Configured and working Azure IoT Central integration extension (see Configuring the Azure IoT Central integration extension for details). Sync your devices In order to establish communication and data flow between device entities in Azure IoT Hub and their Coiote DM counterparts, you need to sync them. Go to Device inventory , click the Sync with IoT platform button and select Azure IoT Hub . In the pop-up window: provide the WHERE clause of the device twin SQL query to filter your devices using chosen tags and properties (to read more about SQL query, check the IoT Hub query language section of Azure IoT Hub documentation. For instance, you can filter by device location region and device status with the following clause: tags.location.region = 'US' AND status = 'enabled' click Count queried devices to check the number of devices that meet the specified conditions (the number is shown inside the Sync devices button) to skip filtering and sync all the available devices, leave the WHERE clause input field empty. click Sync devices to start the synchronization. Now that your devices are synchronized, after their successful connection to the Coiote DM platform, you should be able to see the updated device twin properties in Azure IoT Hub. Tip If the device twin parameters are not up-to-date after syncing, try the refresh data model action on the device.","title":"Syncing devices with Coiote DM"},{"location":"Azure_IoT_Central_integration/Device_operations/Syncing_devices_with_Coiote_DM/#syncing-devices-with-coiote-dm","text":"If you have any device entities in your Azure IoT Central and would like to migrate them to the Coiote DM platform for full management possibilities, follow the instruction below.","title":"Syncing devices with Coiote DM"},{"location":"Azure_IoT_Central_integration/Device_operations/Syncing_devices_with_Coiote_DM/#prerequisites","text":"Configured and working Azure IoT Central integration extension (see Configuring the Azure IoT Central integration extension for details).","title":"Prerequisites"},{"location":"Azure_IoT_Central_integration/Device_operations/Syncing_devices_with_Coiote_DM/#sync-your-devices","text":"In order to establish communication and data flow between device entities in Azure IoT Hub and their Coiote DM counterparts, you need to sync them. Go to Device inventory , click the Sync with IoT platform button and select Azure IoT Hub . In the pop-up window: provide the WHERE clause of the device twin SQL query to filter your devices using chosen tags and properties (to read more about SQL query, check the IoT Hub query language section of Azure IoT Hub documentation. For instance, you can filter by device location region and device status with the following clause: tags.location.region = 'US' AND status = 'enabled' click Count queried devices to check the number of devices that meet the specified conditions (the number is shown inside the Sync devices button) to skip filtering and sync all the available devices, leave the WHERE clause input field empty. click Sync devices to start the synchronization. Now that your devices are synchronized, after their successful connection to the Coiote DM platform, you should be able to see the updated device twin properties in Azure IoT Hub. Tip If the device twin parameters are not up-to-date after syncing, try the refresh data model action on the device.","title":"Sync your devices"},{"location":"Azure_IoT_Hub_integration/Configuring_Azure_IoT_Hub_integration_extension/","text":"Configuring integration extension To enable communication and data flow between the Azure IoT Hub and Coiote DM platforms, you first need to integrate them using the dedicated extension module in Coiote DM. Follow the instruction below to learn how to do it. Prerequisites An active IoT Hub with hub owner access permissions. A Coiote DM user account with permissions to use the integration extension. Get the IoT Hub connection string In your IoT Hub general view, go to Shared access policies : From the list of policies, select the iothubowner policy. Under Shared access keys , click the copy icon for the Connection string -- primary key to save the value. !!! info For detailed information about the IoT Hub permissions, please visit the Control access to IoT Hub section of the Azure IoT Hub documentation. Now you need to use the credential in the Coiote DM platform. Set up the Azure IoT Hub Extension using credentials. In your Coiote DM user account, go to Administration --> Extensions . Find the Azure IoT Hub tab and click Setup . In the tab, paste the previously copied IoT Hub connection string. use Test connection to see if the connection can be established correctly. click Save to keep the setting. Next steps Syncing Azure IoT Hub devices with Coiote DM Importing devices to Azure IoT Hub","title":"Configuring integration extension"},{"location":"Azure_IoT_Hub_integration/Configuring_Azure_IoT_Hub_integration_extension/#configuring-integration-extension","text":"To enable communication and data flow between the Azure IoT Hub and Coiote DM platforms, you first need to integrate them using the dedicated extension module in Coiote DM. Follow the instruction below to learn how to do it.","title":"Configuring integration extension"},{"location":"Azure_IoT_Hub_integration/Configuring_Azure_IoT_Hub_integration_extension/#prerequisites","text":"An active IoT Hub with hub owner access permissions. A Coiote DM user account with permissions to use the integration extension.","title":"Prerequisites"},{"location":"Azure_IoT_Hub_integration/Configuring_Azure_IoT_Hub_integration_extension/#get-the-iot-hub-connection-string","text":"In your IoT Hub general view, go to Shared access policies : From the list of policies, select the iothubowner policy. Under Shared access keys , click the copy icon for the Connection string -- primary key to save the value. !!! info For detailed information about the IoT Hub permissions, please visit the Control access to IoT Hub section of the Azure IoT Hub documentation. Now you need to use the credential in the Coiote DM platform.","title":"Get the IoT Hub connection string"},{"location":"Azure_IoT_Hub_integration/Configuring_Azure_IoT_Hub_integration_extension/#set-up-the-azure-iot-hub-extension-using-credentials","text":"In your Coiote DM user account, go to Administration --> Extensions . Find the Azure IoT Hub tab and click Setup . In the tab, paste the previously copied IoT Hub connection string. use Test connection to see if the connection can be established correctly. click Save to keep the setting.","title":"Set up the Azure IoT Hub Extension using credentials."},{"location":"Azure_IoT_Hub_integration/Configuring_Azure_IoT_Hub_integration_extension/#next-steps","text":"Syncing Azure IoT Hub devices with Coiote DM Importing devices to Azure IoT Hub","title":"Next steps"},{"location":"Azure_IoT_Hub_integration/Concepts/Communication_flows/","text":"Communication flows","title":"Communication flows"},{"location":"Azure_IoT_Hub_integration/Concepts/Communication_flows/#communication-flows","text":"","title":"Communication flows"},{"location":"Azure_IoT_Hub_integration/Device_operations/Importing_devices_to_Azure_IoT_Hub/","text":"Importing devices to Azure IoT Hub If you have device entities in Coiote DM that you would like to manage via the Azure IoT Hub, you may use the import functionality. Follow the instruction below to learn how to do it. Prerequisites Added at least one device entity in Coiote DM. An active Azure Blob Storage account. Create a group of devices for import First, you need to insert all the devices to be imported into a common group for ease of configuration. In Coiote DM, go to Device inventory , select the devices you would like to import and use the Add to group action. In the pop-up window that appears, select a group Get the Azure Blob storage connection string Azure Blob storage connection string will be important in the last step of the import operation. Here is how to obtain it: In your Azure Blob Storage account, go to Access keys . Click Show keys and copy the connection string to your clipboard. Import your devices Now you are ready to import your devices. In the Device groups panel, select your group of devices ready for import and click Actions . Under Management , select the Import devices to Azure IoT . In the pop-up window, paste the Azure Blob Storage connection string and select/deselect the following options: Add all devices to the Azure IoT Hub group - select it to add your devices to a group dedicated for devices integrated with the Azure IoT Hub. Note that this group has the 'Azure dialect' set as the default. Add the Azure dialect to this group - select it if you want to set the 'Azure dialect' to your current group. This setting is useful in case you deselect the first option. Omit devices already tagged as Azure devices - select this option if you have devices in your current group that have been previously imported to Azure IoT Hub and you do not want to include them in the import action.","title":"Importing devices to Azure IoT Hub"},{"location":"Azure_IoT_Hub_integration/Device_operations/Importing_devices_to_Azure_IoT_Hub/#importing-devices-to-azure-iot-hub","text":"If you have device entities in Coiote DM that you would like to manage via the Azure IoT Hub, you may use the import functionality. Follow the instruction below to learn how to do it.","title":"Importing devices to Azure IoT Hub"},{"location":"Azure_IoT_Hub_integration/Device_operations/Importing_devices_to_Azure_IoT_Hub/#prerequisites","text":"Added at least one device entity in Coiote DM. An active Azure Blob Storage account.","title":"Prerequisites"},{"location":"Azure_IoT_Hub_integration/Device_operations/Importing_devices_to_Azure_IoT_Hub/#create-a-group-of-devices-for-import","text":"First, you need to insert all the devices to be imported into a common group for ease of configuration. In Coiote DM, go to Device inventory , select the devices you would like to import and use the Add to group action. In the pop-up window that appears, select a group","title":"Create a group of devices for import"},{"location":"Azure_IoT_Hub_integration/Device_operations/Importing_devices_to_Azure_IoT_Hub/#get-the-azure-blob-storage-connection-string","text":"Azure Blob storage connection string will be important in the last step of the import operation. Here is how to obtain it: In your Azure Blob Storage account, go to Access keys . Click Show keys and copy the connection string to your clipboard.","title":"Get the Azure Blob storage connection string"},{"location":"Azure_IoT_Hub_integration/Device_operations/Importing_devices_to_Azure_IoT_Hub/#import-your-devices","text":"Now you are ready to import your devices. In the Device groups panel, select your group of devices ready for import and click Actions . Under Management , select the Import devices to Azure IoT . In the pop-up window, paste the Azure Blob Storage connection string and select/deselect the following options: Add all devices to the Azure IoT Hub group - select it to add your devices to a group dedicated for devices integrated with the Azure IoT Hub. Note that this group has the 'Azure dialect' set as the default. Add the Azure dialect to this group - select it if you want to set the 'Azure dialect' to your current group. This setting is useful in case you deselect the first option. Omit devices already tagged as Azure devices - select this option if you have devices in your current group that have been previously imported to Azure IoT Hub and you do not want to include them in the import action.","title":"Import your devices"},{"location":"Azure_IoT_Hub_integration/Device_operations/Syncing_devices_with_Coiote_DM/","text":"Syncing devices with Coiote DM If you have any device entities in your Azure IoT Hub and would like to migrate them to the Coiote DM platform for full management possibilities, follow the instruction below. Prerequisites Configured and working Azure IoT Hub integration extension (see Configuring the Azure IoT Hub integration extension for details). Sync your devices In order to establish communication and data flow between device entities in Azure IoT Hub and their Coiote DM counterparts, you need to sync them. Go to Device inventory , click the Sync with IoT platform button and select Azure IoT Hub . In the pop-up window: provide the WHERE clause of the device twin SQL query to filter your devices using chosen tags and properties (to read more about SQL query, check the IoT Hub query language section of Azure IoT Hub documentation. For instance, you can filter by device location region and device status with the following clause: tags.location.region = 'US' AND status = 'enabled' click Count queried devices to check the number of devices that meet the specified conditions (the number is shown inside the Sync devices button) to skip filtering and sync all the available devices, leave the WHERE clause input field empty. click Sync devices to start the synchronization. Now that your devices are synchronized, after their successful connection to the Coiote DM platform, you should be able to see the updated device twin properties in Azure IoT Hub. Tip If the device twin parameters are not up-to-date after syncing, try the refresh data model action on the device.","title":"Syncing devices with Coiote DM"},{"location":"Azure_IoT_Hub_integration/Device_operations/Syncing_devices_with_Coiote_DM/#syncing-devices-with-coiote-dm","text":"If you have any device entities in your Azure IoT Hub and would like to migrate them to the Coiote DM platform for full management possibilities, follow the instruction below.","title":"Syncing devices with Coiote DM"},{"location":"Azure_IoT_Hub_integration/Device_operations/Syncing_devices_with_Coiote_DM/#prerequisites","text":"Configured and working Azure IoT Hub integration extension (see Configuring the Azure IoT Hub integration extension for details).","title":"Prerequisites"},{"location":"Azure_IoT_Hub_integration/Device_operations/Syncing_devices_with_Coiote_DM/#sync-your-devices","text":"In order to establish communication and data flow between device entities in Azure IoT Hub and their Coiote DM counterparts, you need to sync them. Go to Device inventory , click the Sync with IoT platform button and select Azure IoT Hub . In the pop-up window: provide the WHERE clause of the device twin SQL query to filter your devices using chosen tags and properties (to read more about SQL query, check the IoT Hub query language section of Azure IoT Hub documentation. For instance, you can filter by device location region and device status with the following clause: tags.location.region = 'US' AND status = 'enabled' click Count queried devices to check the number of devices that meet the specified conditions (the number is shown inside the Sync devices button) to skip filtering and sync all the available devices, leave the WHERE clause input field empty. click Sync devices to start the synchronization. Now that your devices are synchronized, after their successful connection to the Coiote DM platform, you should be able to see the updated device twin properties in Azure IoT Hub. Tip If the device twin parameters are not up-to-date after syncing, try the refresh data model action on the device.","title":"Sync your devices"}]}